<?php
/**
 * Handles the Pods class endpoint and routes
 *
 * @package   Pods_REST_API
 * @license   GPL-2.0+
 * @copyright 2015 Josh Pollock
 */
namespace pods_rest_api\routes;

use pods_rest_api\infrastructure\request_controller;

class pods extends request_controller {

	/**
	 * Register routes and endpoints
	 *
	 * @since 0.0.2
	 */
	public function register_routes() {
		register_rest_route( $this->config['namespace'], $this->config['route'],
			array(
				array(
					'methods'             => \WP_REST_Server::READABLE,
					'callback'            => array( $this, 'get_items' ),
					'permission_callback' => array( $this, 'get_item_permissions_check' ),
					'args'                => array(
						'context' => array(
							'default' => 'view', // embed, edit,
						),
						'force'   => array(
							'default' => false // trash item - true for force delete
						),
						'argument'    => array(
							'default'           => 0,
							'sanitize_callback' => '',
							'validate_callback' => '',
							'required'
						)
					)
				),
				array(
					'methods'             => \WP_REST_Server::CREATABLE,
					'callback'            => array( $this, 'create_item' ),
					'permission_callback' => array( $this, 'create_item_permissions_check' ),
					'args'                => $this->get_endpoint_args_for_item_schema( true ),
				)
			)
		);

		register_rest_route( $this->config['namespace'], $this->config['route'] . '/(?P<id>[\d]+)', array(
			array(
				'methods'             => \WP_REST_Server::READABLE,
				'callback'            => array( $this, 'get_item' ),
				'permission_callback' => array( $this, 'get_item_permissions_check' ),
				'args'                => array(),
			),
			array(
				'methods'             => \WP_REST_Server::EDITABLE,
				'callback'            => array( $this, 'update_item' ),
				'permission_callback' => array( $this, 'update_item_permissions_check' ),
				'args'                => array()
			),
			array(
				'methods'             => \WP_REST_Server::DELETABLE,
				'callback'            => array( $this, 'delete_item' ),
				'permission_callback' => array( $this, 'delete_item_permissions_check' ),
				'args'                => array(),
			),
		) );

	}

	/**
	 * Get a collection of items
	 *
	 * @since 0.0.2---
	 *
	 * @param \WP_REST_Request $request Full data about the request.
	 *
	 * @return mixed WP_Error or \pods_rest_api\infrastructure\response_controller
	 */
	public function get_items( $request ) {

		$response = rest_ensure_response( "Works!!! :)" );

		return $response;
	}

	public function get_item( $request ) {
		return self::get_items( $request ); // TODO: Change the autogenerated stub
	}

	public function create_item( $request ) {
		return parent::create_item( $request ); // TODO: Change the autogenerated stub
	}

	public function update_item( $request ) {
		return parent::update_item( $request ); // TODO: Change the autogenerated stub
	}

	public function delete_item( $request ) {
		return parent::delete_item( $request ); // TODO: Change the autogenerated stub
	}

	public function get_items_permissions_check( $request ) {
		return parent::permissions_check( $request ); // TODO: Change the autogenerated stub
	}

	public function get_item_permissions_check( $request ) {
		return parent::permissions_check( $request ); // TODO: Change the autogenerated stub
	}

	public function create_item_permissions_check( $request ) {
		return parent::permissions_check( $request ); // TODO: Change the autogenerated stub
	}

	public function update_item_permissions_check( $request ) {
		return parent::permissions_check( $request ); // TODO: Change the autogenerated stub
	}

	public function delete_item_permissions_check( $request ) {
		return parent::permissions_check( $request ); // TODO: Change the autogenerated stub
	}

	public function permissions_check() {
		return parent::permissions_check(); // TODO: Change the autogenerated stub
	}


}